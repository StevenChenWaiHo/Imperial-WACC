[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Eclipse Foundation Java 16.0.2)
[debug]         Load.loadUnit: plugins took 27.1594ms
[debug]         Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\Jing Ngan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Jing Ngan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.0201 ms
[debug]             Load.resolveProject(global-plugins) took 1.4974ms
[debug]           Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Jing Ngan\.sbt\1.0\plugins, plugins: List(<none>))) took 3.9945ms
[debug] [Loading] Done in C:\Users\Jing Ngan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]         Load.loadUnit: loadedProjectsRaw took 5.6869ms
[debug]         Load.loadUnit: cleanEvalClasses took 0.0109ms
[debug]       Load.loadUnit(file:/C:/Users/Jing%20Ngan/.sbt/1.0/plugins/, ...) took 33.9156ms
[debug]     Load.apply: load took 35.822ms
[debug]     Load.apply: resolveProjects took 0.1077ms
[debug]     Load.apply: finalTransforms took 9.0101ms
[debug]     Load.apply: config.delegates took 0.4413ms
[debug]     Load.apply: Def.make(settings)... took 109.314ms
[debug]     Load.apply: structureIndex took 44.6804ms
[debug]     Load.apply: mkStreams took 0.0032ms
[info] loading global plugins from C:\Users\Jing Ngan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]   Load.defaultLoad until apply took 691.5473ms
[debug]             Load.loadUnit: plugins took 28.7239ms
[debug]             Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\Jing Ngan\WACC_39\project
[debug]               Load.loadUnit: mkEval took 8.2082ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Jing Ngan\WACC_39\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5446 ms
[info] loading settings for project wacc_39-build from plugins.sbt,idea.sbt ...
[debug]                 Load.resolveProject(wacc_39-build) took 3.8298ms
[debug]               Load.loadTransitive: finalizeProject(Project(id wacc_39-build, base: C:\Users\Jing Ngan\WACC_39\project, plugins: List(<none>))) took 6.0748ms
[debug] [Loading] Done in C:\Users\Jing Ngan\WACC_39\project, returning: (wacc_39-build)
[debug]             Load.loadUnit: loadedProjectsRaw took 3666.1859ms
[debug]             Load.loadUnit: cleanEvalClasses took 24.5504ms
[debug]           Load.loadUnit(file:/C:/Users/Jing%20Ngan/WACC_39/project/, ...) took 3720.6779ms
[debug]         Load.apply: load took 3722.8419ms
[debug]         Load.apply: resolveProjects took 0.2223ms
[debug]         Load.apply: finalTransforms took 11.118ms
[debug]         Load.apply: config.delegates took 0.4343ms
[debug]         Load.apply: Def.make(settings)... took 82.8405ms
[debug]         Load.apply: structureIndex took 29.0365ms
[debug]         Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Users\Jing Ngan\WACC_39\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]       Load.loadUnit: plugins took 7970.3772ms
[debug]       Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\Jing Ngan\WACC_39
[debug]         Load.loadUnit: mkEval took 0.288ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(com.github.sbt.git.GitBranchPrompt),Set(Atom(com.github.sbt.git.GitPlugin)))
[debug] Clause(Atom(com.github.sbt.git.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(com.github.sbt.git.GitVersioning),Set(Atom(com.github.sbt.git.GitPlugin)))
[debug] Clause(Atom(org.jmotor.sbt.plugin.DependencyUpdatesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.github.sbt.git.GitPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jmotor.sbt.plugin.DependencyUpdatesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,com.github.sbt.git.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jmotor.sbt.plugin.DependencyUpdatesPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.1807 ms
[info] loading settings for project root from build.sbt ...
[debug]           Load.resolveProject(root) took 50.5147ms
[debug]         Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Jing Ngan\WACC_39, plugins: List(<none>))) took 56.7837ms
[debug] [Loading] Done in C:\Users\Jing Ngan\WACC_39, returning: (root)
[debug]       Load.loadUnit: loadedProjectsRaw took 1898.817ms
[debug]       Load.loadUnit: cleanEvalClasses took 12.3363ms
[debug]     Load.loadUnit(file:/C:/Users/Jing%20Ngan/WACC_39/, ...) took 9882.3543ms
[debug]   Load.apply: load took 9884.3722ms
[debug]   Load.apply: resolveProjects took 0.1508ms
[debug]   Load.apply: finalTransforms took 37.6454ms
[debug]   Load.apply: config.delegates took 0.3847ms
[debug]   Load.apply: Def.make(settings)... took 1244.8221ms
[debug]   Load.apply: structureIndex took 33.066ms
[debug]   Load.apply: mkStreams took 0.0046ms
[info] set current project to WACC 39 (in build file:/C:/Users/Jing%20Ngan/WACC_39/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54461 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54461, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to WACC 39 (in build file:/C:/Users/Jing%20Ngan/WACC_39/)
[debug] > Exec(idea-shell, None, None)
